exit
model_class.defined_enums.keys
model_class.defined_enums
exit
Event.defined_enums
 model_class.defined_enums
 model_class.defined_enums.keys
 model_class.defined_enums.keys?
exit
column_for_attribute(attribute).type
attribute
exit
c
exit
scope_klass = [
        StringScopes,
        DateScopes,
        NumericScopes,
        BooleanScopes,
        EnumScopes
      ].detect {|scope_klass| scope_klass.matches?(attribute) }
exit
defined_enums[:status]
defined_enums
attribute_type(:status)
attribute_type
attribute_type(:status).type
column_for_attribute(:status).type
column_for_attribute(:status)
c
exit
Event.methods.grep /with_/
exit
c
invalid_types
exit
invalid_types = [starts_at_type, ends_at_type].select do |type|
ends_at_type
starts_at_type
exit
attribute.is_a?(Symbol)
attribute_or_hash
c
attribute_or_hash
exit
c
attribute_or_hash
exit
Event.methods.grep /with_/
event_a.methods.grep /with/
event_a
exit
self.where("title LIKE ?", "%loper%")
self.where("title LIKE ?", "Developer%")
self.where("title LIKE ?", "%Developer")
self.where("title LIKE ?", "Developer")
self.where("title LIKE ?", "developer")
self.where("title LIKE ?", "loper")
term
exit
MoScopes::StringScopeex
StringScopes.new(attribute)
exit
column_for_attribute(:title).type
column_for_attribute(:title)
attribute_types.first
attr
attribute_types[attribute].type
attribute_types[attribute].methods - Object.methods
attribute_types[attribute].methods
attribute_types[attribute].type
attribute_types[attribute].typ
attribute_types[attribute]
attribute_types
